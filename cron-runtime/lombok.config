#The name of the generated log field (default: log).
lombok.log.fieldName=LOG
lombok.log.log4j2.loggerFactory = org.apache.logging.log4j.LogManager

# If set to true, generated setters will 'chain' by default
# (They will return this instead of having a void return type).
lombok.accessors.chain=true

#If set to true, generated setters and getters will simply be named
# the same as the field name, without a get or set prefix.
lombok.accessors.fluent

#If true, lombok will generate a @java.beans.ConstructorProperties annotation when generating
#constructors. Note that you'll need to depend on module 'java.desktop' if you're using jigsaw.
#lombok.anyConstructor.addConstructorProperties

#- Allows you to forcibly stop or discourage use of a lombok feature. 
#- Legal values for this key are warning or error. 
#- Some examples of values for (featureName) are: 
#-  ~"experimental" (flags use of any of the experimental features), 
#-  ~"builder", 
#-  ~"sneakyThrows", or 
#-  ~"extensionMethod".
#lombok.(featureName).flagUsage
#lombok.experimental.flagUsage
#lombok.builder.flagUsage
#lombok.sneakyThrows.flagUsage
#lombok.extensionMethod.flagUsage

# Lombok adds the @SuppressWarnings("all") annotation to all generated nodes by default. This
# can be turned off which is useful if you want to use static code analyzers like Checker Framework.
#lombok.addSuppressWarnings = false
